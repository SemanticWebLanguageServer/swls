(function() {
    var type_impls = Object.fromEntries([["sophia_api",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CT%3E-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-AsRef%3CT%3E-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<T>","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3Cstr%3E-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-AsRef%3Cstr%3E-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<str>","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CT%3E-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-Borrow%3CT%3E-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt; for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<T>","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3Cstr%3E-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-Borrow%3Cstr%3E-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<str>","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-Clone-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-Debug-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'a%3E-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_serde.rs.html#28\">Source</a><a href=\"#impl-Deserialize%3C'a%3E-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt; for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt; + <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_serde.rs.html#29-31\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'a>","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#105\">Source</a><a href=\"#impl-Display-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#106\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-Hash-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IriRef%3C%26str%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-IriRef%3C%26str%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked_const\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"sophia_api/ns/struct.IriRef.html#tymethod.new_unchecked_const\" class=\"fn\">new_unchecked_const</a>(inner: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a <code>IriRef&lt;&amp;'static str&gt;</code> without checking that the inner value is valid. If it is not, it may result in undefined behaviour.</p>\n</div></details></div></details>",0,"sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_api/ns/struct.IriRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert from <code>&amp;IriRef&lt;T&gt;</code> to <code>IriRef&lt;&amp;str&gt;</code>.</p>\n</div></details></div></details>",0,"sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#65\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_api/ns/struct.IriRef.html#tymethod.new\" class=\"fn\">new</a>(iri: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;, <a class=\"struct\" href=\"sophia_iri/_error/struct.InvalidIri.html\" title=\"struct sophia_iri::_error::InvalidIri\">InvalidIri</a>&gt;</h4></section></summary><div class=\"docblock\"><p>This wrapper guarantees that the underlying <code>str</code>\nsatisfies the <code>irelative-ref</code> rule in  RFC-3687\n(i.e. an absolute or relative IRI reference).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_str\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#74\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_api/ns/struct.IriRef.html#tymethod.as_str\" class=\"fn\">as_str</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Gets a reference to the underlying &amp;str.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#83\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_api/ns/struct.IriRef.html#tymethod.resolve\" class=\"fn\">resolve</a>&lt;U&gt;(&amp;self, rel: U) -&gt; <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"sophia_iri/_trait/trait.IsIriRef.html\" title=\"trait sophia_iri::_trait::IsIriRef\">IsIriRef</a>,</div></h4></section></summary><div class=\"docblock\"><p>Resolve a relative IRI reference against this one.</p>\n<p>NB: when resolving multiple IRI references against the same base,\nit is preferable to first turn it into a <a href=\"sophia_iri/resolve/struct.BaseIriRef.html\" title=\"struct sophia_iri::resolve::BaseIriRef\"><code>BaseIriRef</code></a>,\nwith the <a href=\"sophia_api/ns/struct.IriRef.html#method.as_base\" title=\"method sophia_api::ns::IriRef::as_base\"><code>IriRef::as_base</code></a> or <a href=\"sophia_api/ns/struct.IriRef.html#method.to_base\" title=\"method sophia_api::ns::IriRef::to_base\"><code>IriRef::to_base</code></a> methods.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_base\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#89\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_api/ns/struct.IriRef.html#tymethod.as_base\" class=\"fn\">as_base</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sophia_iri/resolve/struct.BaseIriRef.html\" title=\"struct sophia_iri::resolve::BaseIriRef\">BaseIriRef</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this IRI as a <a href=\"sophia_iri/resolve/struct.BaseIriRef.html\" title=\"struct sophia_iri::resolve::BaseIriRef\"><code>BaseIriRef</code></a>\nproviding more efficient and flexible resolution methods than <a href=\"sophia_api/ns/struct.IriRef.html#method.resolve\" title=\"method sophia_api::ns::IriRef::resolve\"><code>IriRef::resolve</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_base\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#95-97\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_api/ns/struct.IriRef.html#tymethod.to_base\" class=\"fn\">to_base</a>(self) -&gt; <a class=\"struct\" href=\"sophia_iri/resolve/struct.BaseIriRef.html\" title=\"struct sophia_iri::resolve::BaseIriRef\">BaseIriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&lt;Target = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Turn this IRI into a <a href=\"sophia_iri/resolve/struct.BaseIriRef.html\" title=\"struct sophia_iri::resolve::BaseIriRef\"><code>BaseIriRef</code></a>\nproviding more efficient and flexible resolution methods than <a href=\"sophia_api/ns/struct.IriRef.html#method.resolve\" title=\"method sophia_api::ns::IriRef::resolve\"><code>IriRef::resolve</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_api/ns/struct.IriRef.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(inner: T) -&gt; <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a <code>IriRef&lt;T&gt;</code> without checking that the inner value is valid. If it is not, it may result in undefined behaviour.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_api/ns/struct.IriRef.html#tymethod.unwrap\" class=\"fn\">unwrap</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the wrapped value, consuming <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_api/ns/struct.IriRef.html#tymethod.map_unchecked\" class=\"fn\">map_unchecked</a>&lt;F, U&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Map a <code>IriRef&lt;T&gt;</code> to a <code>IriRef&lt;U&gt;</code> by applying a function to the wrapped value. It does not check that the value returned by the function is valid. If it is not, it may result in undefined behaviour.</p>\n</div></details></div></details>",0,"sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-Ord-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#998-1000\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1037-1039\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1063-1065\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CIriRef%3CT%3E%3E-for-IriRef%3CU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-PartialEq%3CIriRef%3CT%3E%3E-for-IriRef%3CU%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<IriRef<T>>","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cstr%3E-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-PartialEq%3Cstr%3E-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<str>","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CIriRef%3CT%3E%3E-for-IriRef%3CU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-PartialOrd%3CIriRef%3CT%3E%3E-for-IriRef%3CU%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1371\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1389\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1407\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1425\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<IriRef<T>>","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cstr%3E-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-PartialOrd%3Cstr%3E-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1371\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1389\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1407\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1425\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<str>","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_serde.rs.html#39\">Source</a><a href=\"#impl-Serialize-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_serde.rs.html#40-42\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Term-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_api/term/_native_iri.rs.html#24-39\">Source</a><a href=\"#impl-Term-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sophia_api/term/trait.Term.html\" title=\"trait sophia_api::term::Term\">Term</a> for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.BorrowTerm\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term/_native_iri.rs.html#28\">Source</a><a href=\"#associatedtype.BorrowTerm\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sophia_api/term/trait.Term.html#associatedtype.BorrowTerm\" class=\"associatedtype\">BorrowTerm</a>&lt;'x&gt; = &amp;'x <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;\n<span class=\"where\">where\n    T: 'x</span></h4></section></summary><div class='docblock'>A type of <a href=\"sophia_api/term/trait.Term.html\" title=\"trait sophia_api::term::Term\"><code>Term</code></a> that can be borrowed from this type\n(i.e. that can be obtained from a simple reference to this type).\nIt is used in particular for accessing constituents of quoted tripes (<a href=\"sophia_api/term/trait.Term.html#method.triple\" title=\"method sophia_api::term::Term::triple\"><code>Term::triple</code></a>)\nor for sharing this term with a function that expects <code>T: Term</code> (rather than <code>&amp;T</code>)\nusing <a href=\"sophia_api/term/trait.Term.html#tymethod.borrow_term\" title=\"method sophia_api::term::Term::borrow_term\"><code>Term::borrow_term</code></a>. <a href=\"sophia_api/term/trait.Term.html#associatedtype.BorrowTerm\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term/_native_iri.rs.html#30-32\">Source</a><a href=\"#method.kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" class=\"fn\">kind</a>(&amp;self) -&gt; <a class=\"enum\" href=\"sophia_api/term/enum.TermKind.html\" title=\"enum sophia_api::term::TermKind\">TermKind</a></h4></section></summary><div class='docblock'>Return the kind of RDF term that this <a href=\"sophia_api/term/trait.Term.html\" title=\"trait sophia_api::term::Term\"><code>Term</code></a> represents.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iri\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term/_native_iri.rs.html#33-35\">Source</a><a href=\"#method.iri\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.iri\" class=\"fn\">iri</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;<a class=\"struct\" href=\"sophia_api/struct.MownStr.html\" title=\"struct sophia_api::MownStr\">MownStr</a>&lt;'_&gt;&gt;&gt;</h4></section></summary><div class='docblock'>If <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> returns <a href=\"sophia_api/term/enum.TermKind.html#variant.Iri\" title=\"variant sophia_api::term::TermKind::Iri\"><code>TermKind::Iri</code></a>,\nreturn this IRI.\nOtherwise return <code>None</code>. <a href=\"sophia_api/term/trait.Term.html#method.iri\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_term\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term/_native_iri.rs.html#36-38\">Source</a><a href=\"#method.borrow_term\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#tymethod.borrow_term\" class=\"fn\">borrow_term</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"sophia_api/term/trait.Term.html#associatedtype.BorrowTerm\" title=\"type sophia_api::term::Term::BorrowTerm\">BorrowTerm</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Get something implementing <a href=\"sophia_api/term/trait.Term.html\" title=\"trait sophia_api::term::Term\"><code>Term</code></a> from a simple reference to <code>self</code>,\nrepresenting the same RDF term as <code>self</code>. <a href=\"sophia_api/term/trait.Term.html#tymethod.borrow_term\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_iri\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#118-120\">Source</a><a href=\"#method.is_iri\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.is_iri\" class=\"fn\">is_iri</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return true if this <a href=\"sophia_api/term/trait.Term.html\" title=\"trait sophia_api::term::Term\"><code>Term</code></a> is an IRI,\ni.e. if <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> retuns <a href=\"sophia_api/term/enum.TermKind.html#variant.Iri\" title=\"variant sophia_api::term::TermKind::Iri\"><code>TermKind::Iri</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_blank_node\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#125-127\">Source</a><a href=\"#method.is_blank_node\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.is_blank_node\" class=\"fn\">is_blank_node</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return true if this <a href=\"sophia_api/term/trait.Term.html\" title=\"trait sophia_api::term::Term\"><code>Term</code></a> is a blank node,\ni.e. if <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> retuns <a href=\"sophia_api/term/enum.TermKind.html#variant.BlankNode\" title=\"variant sophia_api::term::TermKind::BlankNode\"><code>TermKind::BlankNode</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_literal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#132-134\">Source</a><a href=\"#method.is_literal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.is_literal\" class=\"fn\">is_literal</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return true if this <a href=\"sophia_api/term/trait.Term.html\" title=\"trait sophia_api::term::Term\"><code>Term</code></a> is a literal,\ni.e. if <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> retuns <a href=\"sophia_api/term/enum.TermKind.html#variant.Literal\" title=\"variant sophia_api::term::TermKind::Literal\"><code>TermKind::Literal</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_variable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#139-141\">Source</a><a href=\"#method.is_variable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.is_variable\" class=\"fn\">is_variable</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return true if this <a href=\"sophia_api/term/trait.Term.html\" title=\"trait sophia_api::term::Term\"><code>Term</code></a> is a variable,\ni.e. if <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> retuns <a href=\"sophia_api/term/enum.TermKind.html#variant.Variable\" title=\"variant sophia_api::term::TermKind::Variable\"><code>TermKind::Variable</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_atom\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#149-155\">Source</a><a href=\"#method.is_atom\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.is_atom\" class=\"fn\">is_atom</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return true if this <a href=\"sophia_api/term/trait.Term.html\" title=\"trait sophia_api::term::Term\"><code>Term</code></a> is an atomic term,\ni.e. an <a href=\"sophia_api/term/trait.Term.html#method.is_iri\" title=\"method sophia_api::term::Term::is_iri\">IRI</a>,\na <a href=\"sophia_api/term/trait.Term.html#method.is_blank_node\" title=\"method sophia_api::term::Term::is_blank_node\">blank node</a>,\na <a href=\"sophia_api/term/trait.Term.html#method.is_literal\" title=\"method sophia_api::term::Term::is_literal\">literal</a>\nor a <a href=\"sophia_api/term/trait.Term.html#method.is_variable\" title=\"method sophia_api::term::Term::is_variable\">variable</a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_triple\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#160-162\">Source</a><a href=\"#method.is_triple\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.is_triple\" class=\"fn\">is_triple</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return true if this <a href=\"sophia_api/term/trait.Term.html\" title=\"trait sophia_api::term::Term\"><code>Term</code></a> is an RDF-star quoted triple,\ni.e. if <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> retuns <a href=\"sophia_api/term/enum.TermKind.html#variant.Triple\" title=\"variant sophia_api::term::TermKind::Triple\"><code>TermKind::Triple</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bnode_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#185-188\">Source</a><a href=\"#method.bnode_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.bnode_id\" class=\"fn\">bnode_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sophia_api/term/bnode_id/struct.BnodeId.html\" title=\"struct sophia_api::term::bnode_id::BnodeId\">BnodeId</a>&lt;<a class=\"struct\" href=\"sophia_api/struct.MownStr.html\" title=\"struct sophia_api::MownStr\">MownStr</a>&lt;'_&gt;&gt;&gt;</h4></section></summary><div class='docblock'>If <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> returns <a href=\"sophia_api/term/enum.TermKind.html#variant.BlankNode\" title=\"variant sophia_api::term::TermKind::BlankNode\"><code>TermKind::BlankNode</code></a>,\nreturn the locally unique label of this blank node.\nOtherwise return <code>None</code>. <a href=\"sophia_api/term/trait.Term.html#method.bnode_id\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lexical_form\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#198-201\">Source</a><a href=\"#method.lexical_form\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.lexical_form\" class=\"fn\">lexical_form</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sophia_api/struct.MownStr.html\" title=\"struct sophia_api::MownStr\">MownStr</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>If <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> returns <a href=\"sophia_api/term/enum.TermKind.html#variant.Literal\" title=\"variant sophia_api::term::TermKind::Literal\"><code>TermKind::Literal</code></a>,\nreturn the lexical form of this literal.\nOtherwise return <code>None</code>. <a href=\"sophia_api/term/trait.Term.html#method.lexical_form\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.datatype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#214-217\">Source</a><a href=\"#method.datatype\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.datatype\" class=\"fn\">datatype</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"type\" href=\"sophia_api/term/type.IriRef.html\" title=\"type sophia_api::term::IriRef\">IriRef</a>&lt;<a class=\"struct\" href=\"sophia_api/struct.MownStr.html\" title=\"struct sophia_api::MownStr\">MownStr</a>&lt;'_&gt;&gt;&gt;</h4></section></summary><div class='docblock'>If <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> returns <a href=\"sophia_api/term/enum.TermKind.html#variant.Literal\" title=\"variant sophia_api::term::TermKind::Literal\"><code>TermKind::Literal</code></a>,\nreturn the datatype IRI of this literal.\nOtherwise return <code>None</code>. <a href=\"sophia_api/term/trait.Term.html#method.datatype\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.language_tag\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#228-231\">Source</a><a href=\"#method.language_tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.language_tag\" class=\"fn\">language_tag</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sophia_api/term/language_tag/struct.LanguageTag.html\" title=\"struct sophia_api::term::language_tag::LanguageTag\">LanguageTag</a>&lt;<a class=\"struct\" href=\"sophia_api/struct.MownStr.html\" title=\"struct sophia_api::MownStr\">MownStr</a>&lt;'_&gt;&gt;&gt;</h4></section></summary><div class='docblock'>If <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> returns <a href=\"sophia_api/term/enum.TermKind.html#variant.Literal\" title=\"variant sophia_api::term::TermKind::Literal\"><code>TermKind::Literal</code></a>,\nand if this literal is a language-tagged string,\nreturn its language tag.\nOtherwise return <code>None</code>. <a href=\"sophia_api/term/trait.Term.html#method.language_tag\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.variable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#241-244\">Source</a><a href=\"#method.variable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.variable\" class=\"fn\">variable</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sophia_api/term/var_name/struct.VarName.html\" title=\"struct sophia_api::term::var_name::VarName\">VarName</a>&lt;<a class=\"struct\" href=\"sophia_api/struct.MownStr.html\" title=\"struct sophia_api::MownStr\">MownStr</a>&lt;'_&gt;&gt;&gt;</h4></section></summary><div class='docblock'>If <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> returns <a href=\"sophia_api/term/enum.TermKind.html#variant.Variable\" title=\"variant sophia_api::term::TermKind::Variable\"><code>TermKind::Variable</code></a>,\nreturn the name of this variable.\nOtherwise return <code>None</code>. <a href=\"sophia_api/term/trait.Term.html#method.variable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.triple\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#254-257\">Source</a><a href=\"#method.triple\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.triple\" class=\"fn\">triple</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;[Self::<a class=\"associatedtype\" href=\"sophia_api/term/trait.Term.html#associatedtype.BorrowTerm\" title=\"type sophia_api::term::Term::BorrowTerm\">BorrowTerm</a>&lt;'_&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">3</a>]&gt;</h4></section></summary><div class='docblock'>If <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> returns <a href=\"sophia_api/term/enum.TermKind.html#variant.Triple\" title=\"variant sophia_api::term::TermKind::Triple\"><code>TermKind::Triple</code></a>,\nreturn this triple.\nOtherwise return <code>None</code>. <a href=\"sophia_api/term/trait.Term.html#method.triple\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_triple\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#267-273\">Source</a><a href=\"#method.to_triple\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.to_triple\" class=\"fn\">to_triple</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;[Self; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">3</a>]&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>If <a href=\"sophia_api/term/trait.Term.html#tymethod.kind\" title=\"method sophia_api::term::Term::kind\"><code>kind</code></a> returns <a href=\"sophia_api/term/enum.TermKind.html#variant.Triple\" title=\"variant sophia_api::term::TermKind::Triple\"><code>TermKind::Triple</code></a>,\nreturn this triple, consuming this term.\nOtherwise return <code>None</code>. <a href=\"sophia_api/term/trait.Term.html#method.to_triple\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.constituents\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#306-314\">Source</a><a href=\"#method.constituents\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.constituents\" class=\"fn\">constituents</a>&lt;'s&gt;(\n    &amp;'s self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"sophia_api/term/trait.Term.html#associatedtype.BorrowTerm\" title=\"type sophia_api::term::Term::BorrowTerm\">BorrowTerm</a>&lt;'s&gt;&gt; + 's&gt;</h4></section></summary><div class='docblock'>Iter over all the constituents of this term. <a href=\"sophia_api/term/trait.Term.html#method.constituents\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_constituents\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#319-335\">Source</a><a href=\"#method.to_constituents\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.to_constituents\" class=\"fn\">to_constituents</a>&lt;'a&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self&gt; + 'a&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'a,</div></h4></section></summary><div class='docblock'>Iter over all the constiutents of this term, consuming it. <a href=\"sophia_api/term/trait.Term.html#method.to_constituents\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.atoms\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#343-348\">Source</a><a href=\"#method.atoms\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.atoms\" class=\"fn\">atoms</a>&lt;'s&gt;(&amp;'s self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"sophia_api/term/trait.Term.html#associatedtype.BorrowTerm\" title=\"type sophia_api::term::Term::BorrowTerm\">BorrowTerm</a>&lt;'s&gt;&gt; + 's&gt;</h4></section></summary><div class='docblock'>Iter over all the <a href=\"sophia_api/term/trait.Term.html#method.is_atom\" title=\"method sophia_api::term::Term::is_atom\">atomic</a> constituents of this term. <a href=\"sophia_api/term/trait.Term.html#method.atoms\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_atoms\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#353-367\">Source</a><a href=\"#method.to_atoms\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.to_atoms\" class=\"fn\">to_atoms</a>&lt;'a&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self&gt; + 'a&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a,</div></h4></section></summary><div class='docblock'>Iter over all the <a href=\"sophia_api/term/trait.Term.html#method.is_atom\" title=\"method sophia_api::term::Term::is_atom\">atomic</a> constituents of this term, consuming it. <a href=\"sophia_api/term/trait.Term.html#method.to_atoms\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#370-390\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.eq\" class=\"fn\">eq</a>&lt;T: <a class=\"trait\" href=\"sophia_api/term/trait.Term.html\" title=\"trait sophia_api::term::Term\">Term</a>&gt;(&amp;self, other: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check whether <code>self</code> and <code>other</code> represent the same RDF term.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#401-438\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.cmp\" class=\"fn\">cmp</a>&lt;T&gt;(&amp;self, other: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sophia_api/term/trait.Term.html\" title=\"trait sophia_api::term::Term\">Term</a>,</div></h4></section></summary><div class='docblock'>Compare two terms: <a href=\"sophia_api/term/trait.Term.html#method.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#441-467\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Compute an implementation-independant hash of this RDF term.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_term\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#476-481\">Source</a><a href=\"#method.into_term\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.into_term\" class=\"fn\">into_term</a>&lt;T: <a class=\"trait\" href=\"sophia_api/term/trait.FromTerm.html\" title=\"trait sophia_api::term::FromTerm\">FromTerm</a>&gt;(self) -&gt; T<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert this term in another type. <a href=\"sophia_api/term/trait.Term.html#method.into_term\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_into_term\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#490-495\">Source</a><a href=\"#method.try_into_term\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.try_into_term\" class=\"fn\">try_into_term</a>&lt;T: <a class=\"trait\" href=\"sophia_api/term/trait.TryFromTerm.html\" title=\"trait sophia_api::term::TryFromTerm\">TryFromTerm</a>&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, T::<a class=\"associatedtype\" href=\"sophia_api/term/trait.TryFromTerm.html#associatedtype.Error\" title=\"type sophia_api::term::TryFromTerm::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Try to convert this term into another type. <a href=\"sophia_api/term/trait.Term.html#method.try_into_term\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_simple\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_api/term.rs.html#501-503\">Source</a><a href=\"#method.as_simple\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sophia_api/term/trait.Term.html#method.as_simple\" class=\"fn\">as_simple</a>(&amp;self) -&gt; <a class=\"enum\" href=\"sophia_api/term/enum.SimpleTerm.html\" title=\"enum sophia_api::term::SimpleTerm\">SimpleTerm</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Copies this term into a <a href=\"sophia_api/term/enum.SimpleTerm.html\" title=\"enum sophia_api::term::SimpleTerm\"><code>SimpleTerm</code></a>,\nborrowing as much as possible from <code>self</code>\n(calling <a href=\"sophia_api/term/enum.SimpleTerm.html#method.from_term_ref\" title=\"associated function sophia_api::term::SimpleTerm::from_term_ref\"><code>SimpleTerm::from_term_ref</code></a>).</div></details></div></details>","Term","sophia_api::term::IriRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-__Deref-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-__Deref-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","sophia_api::term::IriRef"],["<section id=\"impl-Copy-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-Copy-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section>","Copy","sophia_api::term::IriRef"],["<section id=\"impl-Eq-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#61-101\">Source</a><a href=\"#impl-Eq-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","sophia_api::term::IriRef"],["<section id=\"impl-IsIriRef-for-IriRef%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_iri/_wrapper.rs.html#103\">Source</a><a href=\"#impl-IsIriRef-for-IriRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sophia_iri/_trait/trait.IsIriRef.html\" title=\"trait sophia_iri::_trait::IsIriRef\">IsIriRef</a> for <a class=\"struct\" href=\"sophia_api/ns/struct.IriRef.html\" title=\"struct sophia_api::ns::IriRef\">IriRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;,</div></h3></section>","IsIriRef","sophia_api::term::IriRef"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[93234]}