(function() {
    var type_impls = Object.fromEntries([["sophia_turtle",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-TurtleConfig\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#25\">Source</a><a href=\"#impl-Clone-for-TurtleConfig\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html\" title=\"struct sophia_turtle::serializer::turtle::TurtleConfig\">TurtleConfig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#25\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html\" title=\"struct sophia_turtle::serializer::turtle::TurtleConfig\">TurtleConfig</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sophia_turtle::serializer::trig::TrigConfig"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-TurtleConfig\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#25\">Source</a><a href=\"#impl-Debug-for-TurtleConfig\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html\" title=\"struct sophia_turtle::serializer::turtle::TurtleConfig\">TurtleConfig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#25\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sophia_turtle::serializer::trig::TrigConfig"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-TurtleConfig\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#122-126\">Source</a><a href=\"#impl-Default-for-TurtleConfig\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html\" title=\"struct sophia_turtle::serializer::turtle::TurtleConfig\">TurtleConfig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#123-125\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sophia_turtle::serializer::trig::TrigConfig"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TurtleConfig\" class=\"impl\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#32-120\">Source</a><a href=\"#impl-TurtleConfig\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html\" title=\"struct sophia_turtle::serializer::turtle::TurtleConfig\">TurtleConfig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.pretty\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#42-44\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#tymethod.pretty\" class=\"fn\">pretty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Should the parser make extra effort to produce pretty Turtle.</p>\n<p>If false (default), the triples will be serialized in streaming mode.\nSubject and predicate “factorization” will only occur based on the previous triple(s)\nin the stream. The collection syntax for <code>rdf:List</code>s will not be used.</p>\n<p>If true, extra effort will be made to group related triples together,\nand to use the collection syntax whenever possible.\nThis requires storing the whole graph in memory.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prefix_map\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#50-52\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#tymethod.prefix_map\" class=\"fn\">prefix_map</a>(&amp;self) -&gt; &amp;[<a class=\"type\" href=\"sophia_api/prefix/_prefix_map/type.PrefixMapPair.html\" title=\"type sophia_api::prefix::_prefix_map::PrefixMapPair\">PrefixMapPair</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[PrefixMapPair]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p><a href=\"sophia_api/prefix/_prefix_map/trait.PrefixMap.html\" title=\"trait sophia_api::prefix::_prefix_map::PrefixMap\"><code>PrefixMap</code></a> to use in serialization.\n(defaults to a map containing rdf:, rdfs: and xsd:)</p>\n<p>NB: currently, only used if <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#method.pretty\" title=\"method sophia_turtle::serializer::turtle::TurtleConfig::pretty\"><code>pretty</code></a> is <code>true</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.indentation\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#58-60\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#tymethod.indentation\" class=\"fn\">indentation</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Indentation to use in serialization.\n(defaults to <code>\"  \"</code>, can only contain ASCII whitespaces)</p>\n<p>NB: currently, only used if <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#method.pretty\" title=\"method sophia_turtle::serializer::turtle::TurtleConfig::pretty\"><code>pretty</code></a> is <code>true</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#63-72\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Build a new default <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html\" title=\"struct sophia_turtle::serializer::turtle::TurtleConfig\"><code>TurtleConfig</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_pretty\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#75-78\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#tymethod.with_pretty\" class=\"fn\">with_pretty</a>(self, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Transform a <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html\" title=\"struct sophia_turtle::serializer::turtle::TurtleConfig\"><code>TurtleConfig</code></a> by setting the <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#method.pretty\" title=\"method sophia_turtle::serializer::turtle::TurtleConfig::pretty\"><code>pretty</code></a> flag.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_prefix_map\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#82-84\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#tymethod.with_prefix_map\" class=\"fn\">with_prefix_map</a>&lt;P: <a class=\"trait\" href=\"sophia_api/prefix/_prefix_map/trait.PrefixMap.html\" title=\"trait sophia_api::prefix::_prefix_map::PrefixMap\">PrefixMap</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(self, pm: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;P</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Transform a <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html\" title=\"struct sophia_turtle::serializer::turtle::TurtleConfig\"><code>TurtleConfig</code></a> by setting the <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#method.prefix_map\" title=\"method sophia_turtle::serializer::turtle::TurtleConfig::prefix_map\"><code>prefix_map</code></a> flag\n(copying <code>pm</code> using <a href=\"sophia_api/prefix/_prefix_map/trait.PrefixMap.html#method.to_vec\" title=\"method sophia_api::prefix::_prefix_map::PrefixMap::to_vec\"><code>PrefixMap::to_vec</code></a>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_own_prefix_map\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#87-90\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#tymethod.with_own_prefix_map\" class=\"fn\">with_own_prefix_map</a>(self, pm: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"type\" href=\"sophia_api/prefix/_prefix_map/type.PrefixMapPair.html\" title=\"type sophia_api::prefix::_prefix_map::PrefixMapPair\">PrefixMapPair</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Transform a <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html\" title=\"struct sophia_turtle::serializer::turtle::TurtleConfig\"><code>TurtleConfig</code></a> by setting the <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#method.prefix_map\" title=\"method sophia_turtle::serializer::turtle::TurtleConfig::prefix_map\"><code>prefix_map</code></a> flag.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_indentation\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#96-101\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#tymethod.with_indentation\" class=\"fn\">with_indentation</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/alloc/string/trait.ToString.html\" title=\"trait alloc::string::ToString\">ToString</a>&gt;(self, indentation: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Transform a <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html\" title=\"struct sophia_turtle::serializer::turtle::TurtleConfig\"><code>TurtleConfig</code></a> by setting the <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#method.indentation\" title=\"method sophia_turtle::serializer::turtle::TurtleConfig::indentation\"><code>indentation</code></a> flag.</p>\n<h5 id=\"precondition\"><a class=\"doc-anchor\" href=\"#precondition\">§</a>Precondition</h5>\n<p><code>indentation</code> must only contain ASCII whitespaces, otherwise this method will panic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_prefix_map\" class=\"method\"><a class=\"src rightside\" href=\"src/sophia_turtle/serializer/turtle.rs.html#104-119\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sophia_turtle/serializer/turtle/struct.TurtleConfig.html#tymethod.default_prefix_map\" class=\"fn\">default_prefix_map</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"type\" href=\"sophia_api/prefix/_prefix_map/type.PrefixMapPair.html\" title=\"type sophia_api::prefix::_prefix_map::PrefixMapPair\">PrefixMapPair</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;PrefixMapPair&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Return the prefix map that is used when none is provided</p>\n</div></details></div></details>",0,"sophia_turtle::serializer::trig::TrigConfig"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[15247]}