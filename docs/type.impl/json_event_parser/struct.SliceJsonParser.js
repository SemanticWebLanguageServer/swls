(function() {
    var type_impls = Object.fromEntries([["json_event_parser",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SliceJsonParser%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/json_event_parser/read.rs.html#249-274\">Source</a><a href=\"#impl-SliceJsonParser%3C'a%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"struct\" href=\"json_event_parser/struct.SliceJsonParser.html\" title=\"struct json_event_parser::SliceJsonParser\">SliceJsonParser</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/json_event_parser/read.rs.html#250-255\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"json_event_parser/struct.SliceJsonParser.html#tymethod.new\" class=\"fn\">new</a>(buffer: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]) -&gt; Self</h4></section><section id=\"method.parse_next\" class=\"method\"><a class=\"src rightside\" href=\"src/json_event_parser/read.rs.html#257-268\">Source</a><h4 class=\"code-header\">pub fn <a href=\"json_event_parser/struct.SliceJsonParser.html#tymethod.parse_next\" class=\"fn\">parse_next</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"json_event_parser/enum.JsonEvent.html\" title=\"enum json_event_parser::JsonEvent\">JsonEvent</a>&lt;'a&gt;, <a class=\"struct\" href=\"json_event_parser/struct.JsonSyntaxError.html\" title=\"struct json_event_parser::JsonSyntaxError\">JsonSyntaxError</a>&gt;</h4></section><section id=\"method.read_next_event\" class=\"method\"><a class=\"src rightside\" href=\"src/json_event_parser/read.rs.html#271-273\">Source</a><h4 class=\"code-header\">pub fn <a href=\"json_event_parser/struct.SliceJsonParser.html#tymethod.read_next_event\" class=\"fn\">read_next_event</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"json_event_parser/enum.JsonEvent.html\" title=\"enum json_event_parser::JsonEvent\">JsonEvent</a>&lt;'_&gt;, <a class=\"struct\" href=\"json_event_parser/struct.JsonSyntaxError.html\" title=\"struct json_event_parser::JsonSyntaxError\">JsonSyntaxError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated: Use parse_next() instead</span></div></span></div></details>",0,"json_event_parser::FromBufferJsonReader"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[2655]}