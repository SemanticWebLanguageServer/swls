searchState.loadedDescShard("sophia_turtle", 0, "This crate is part of Sophia, an RDF and Linked Data …\nParsers for the Turtle-familt of RDF concrete syntaxes, …\nSerializers for the Turtle-familt of RDF concrete syntaxes,\nAdapter for the Generalized N-Quads parser from RIO\nAdapter for the Generalized TriG parser from RIO\nAdapter for the N-Quads parser from RIO\nAdapter for the N-Triples parser from RIO\nAdapter for the TriG parser from RIO\nAdapter for the Turtle parser from RIO\nN-Quads parser based on RIO.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvenience function for parsing a BufRead with the …\nConvenience function for parsing a str with the default …\nTriG parser based on RIO.\nThe base IRI used by this parser to resolve relative …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvenience function for parsing a BufRead with the …\nConvenience function for parsing a str with the default …\nN-Quads parser based on RIO.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvenience function for parsing a BufRead with the …\nConvenience function for parsing a str with the default …\nN-Triples parser based on RIO.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvenience function for parsing a BufRead with the …\nConvenience function for parsing a str with the default …\nTriG parser based on RIO.\nThe base IRI used by this parser to resolve relative …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvenience function for parsing a BufRead with the …\nConvenience function for parsing a str with the default …\nTurtle parser based on RIO.\nThe base IRI used by this parser to resolve relative …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvenience function for parsing a BufRead with the …\nConvenience function for parsing a str with the default …\nSerializer for the N-Quads concrete syntax of RDF.\nSerializer for the N-Triples concrete syntax of RDF.\nSerializer for the TriG concrete syntax of RDF.\nSerializer for the Turtle concrete syntax of RDF.\nN-Quads serializer configuration.\nN-Quads serializer.\nBorrow this serializer’s configuration.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBuild a new N-Quads serializer writing to <code>write</code>, with the …\nCreate a new serializer which targets a <code>String</code>.\nCreate a new serializer which targets a <code>String</code> with a …\nBuild a new N-Quads serializer writing to <code>write</code>, with the …\nN-Triples serializer configuration.\nN-Triples serializer.\nBorrow this serializer’s configuration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBuild a new N-Triples serializer writing to <code>write</code>, with …\nCreate a new serializer which targets a <code>String</code>.\nCreate a new serializer which targets a <code>String</code> with a …\nBuild a new N-Triples serializer writing to <code>write</code>, with …\nSet the ascii configuration.\nWrite the given term into the given write in the N-Triples …\nWrite the given term into the given write in the N-Triples …\nTrig serializer configuration.\nTrig serializer.\nBorrow this serializer’s configuration.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBuild a new Trig serializer writing to <code>write</code>, with the …\nCreate a new serializer which targets a <code>String</code>.\nCreate a new serializer which targets a <code>String</code> with a …\nBuild a new Trig serializer writing to <code>write</code>, with the …\nTurtle serializer configuration.\nTurtle serializer.\nBorrow this serializer’s configuration.\nReturn the prefix map that is used when none is provided\nReturns the argument unchanged.\nReturns the argument unchanged.\nIndentation to use in serialization. (defaults to <code>&quot;  &quot;</code>, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBuild a new Turtle serializer writing to <code>write</code>, with the …\nBuild a new default <code>TurtleConfig</code>.\nCreate a new serializer which targets a <code>String</code>.\nCreate a new serializer which targets a <code>String</code> with a …\nBuild a new Turtle serializer writing to <code>write</code>, with the …\n<code>PrefixMap</code> to use in serialization. (defaults to a map …\nShould the parser make extra effort to produce pretty …\nTransform a <code>TurtleConfig</code> by setting the <code>indentation</code> flag.\nTransform a <code>TurtleConfig</code> by setting the <code>prefix_map</code> flag.\nTransform a <code>TurtleConfig</code> by setting the <code>prefix_map</code> flag …\nTransform a <code>TurtleConfig</code> by setting the <code>pretty</code> flag.")