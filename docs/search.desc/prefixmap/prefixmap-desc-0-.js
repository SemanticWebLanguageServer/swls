searchState.loadedDescShard("prefixmap", 0, "Prefix map implementation\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains declarations of prefix maps which are used in …\nBasic prefixmap with common definitions\nReturns the argument unchanged.\nInserts an alias association to an IRI\nCalls <code>U::from(self)</code>.\nReturn an iterator over the key-value pairs of the (“…\nProper prefix map associations of an alias <code>String</code> to an …\nCreates an empty (“map\nQualifies an IRI against a prefix map\nQualifies an IRI against a prefix map returning the length …\nQualify an IRI against a prefix map and obtains the local …\nQualifies an IRI against a prefix map\nResolves a string against a prefix map Example: Given a …\nResolves an IriRef against a prefix map\nResolves a prefixed alias and a local name in a prefix map …\nDefault Wikidata prefixmap This source of this list is …\nChange color of localname when qualifying a IRI\nChange (“color when qualifying a IRI\nChange color of semicolon when qualifying a IRI\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")