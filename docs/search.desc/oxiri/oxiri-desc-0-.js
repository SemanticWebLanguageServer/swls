searchState.loadedDescShard("oxiri", 0, "OxIRI\nA RFC 3987 IRI.\nAn error raised during <code>Iri</code> or <code>IriRef</code> validation.\nA RFC 3987 IRI reference.\nAn error raised when calling <code>Iri::relativize</code>.\nReturns an <code>IriRef</code> borrowing this IRI’s text.\nReturns an IRI borrowing this IRI’s text\nReturns the underlying IRI representation.\nReturns the underlying IRI representation.\nReturns the IRI authority if it exists.\nReturns the IRI authority if it exists.\nReturns the IRI fragment if it exists.\nReturns the IRI fragment if it exists.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the underlying IRI representation.\nReturns the underlying IRI representation.\nWhether this IRI is an absolute IRI reference or not.\nParses and validates the IRI-reference following the …\nParses and validates the IRI following the grammar from …\nVariant of <code>parse</code> that assumes that the IRI is valid to …\nVariant of <code>parse</code> that assumes that the IRI is valid to …\nReturns the IRI path.\nReturns the IRI path.\nReturns the IRI query if it exists.\nReturns the IRI query if it exists.\nReturns an IRI that, when resolved against the current IRI …\nValidates and resolved a relative IRI against the current …\nValidates and resolved a relative IRI against the current …\nValidates and resolved a relative IRI against the current …\nValidates and resolved a relative IRI against the current …\nVariant of <code>resolve_into</code> that assumes that the IRI is valid …\nVariant of <code>resolve_into</code> that assumes that the IRI is valid …\nVariant of <code>resolve</code> that assumes that the IRI is valid to …\nVariant of <code>resolve</code> that assumes that the IRI is valid to …\nReturns the IRI scheme if it exists.\nReturns the IRI scheme.")