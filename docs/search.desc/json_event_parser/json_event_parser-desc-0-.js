searchState.loadedDescShard("json_event_parser", 0, "JSON streaming parser and serializer\nI/O error during parsing (file not found…).\nI/O error during parsing (file not found…).\nPossible events during JSON parsing.\nA parsing error.\nAn error in the syntax of the parsed file.\nA low-level JSON parser acting on a provided buffer.\nResult of <code>LowLevelJsonParser::parse_next</code>.\nA low-level JSON streaming writer writing to a <code>Write</code> …\nParses a JSON file from a <code>Read</code> implementation.\nParses a JSON file from a <code>&amp;[u8]</code>.\nAn error in the file syntax.\nAn error in the file syntax.\nA position in a text i.e. a <code>line</code> number starting from 0, a …\nA JSON streaming writer writing to a <code>Write</code> implementation.\nHow many bytes have been read from <code>input_buffer</code> and should …\nHow many bytes have been read from <code>input_buffer</code> and should …\nA possible new event\nA possible new event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe location of the error inside of the file.\nThe error message.\nReads a new event from the data in <code>input_buffer</code>.\nSets the max size of the internal buffer in bytes\nMaximal allowed number of nested object and array …")