searchState.loadedDescShard("shex_validation", 0, "ShEx validation\nMethod employed to resolve imports when ghessing the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn atom can either be positive or negative\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReason represents justifications about why a node conforms …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet the list of imported schemas\nCalls <code>U::from(self)</code>.\nReturn the number of shapes declared in the current schema …\nResolve the imports declared in a schema\nReturns an iterator of the shape expressions that the …\nReturn the total number of shapes declared included the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis struct can be used to customize the behavour of ShEx …\nShEx configuration on main\nDefault IRI to resolve relative IRIs\nCheck if schema is well formed\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nObtain a <code>ShExConfigMain</code> from a path file in TOML format\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInformation about RDF data config which is used for …\nSpecific ShEx configuration\nDefault ShEx format\nShow dependencies\nShow information about extended shapes\nShow information about schema imports\nShow ShEx Schema Internal Representation\nShow information about shapes\nShow information about time\nContains possible ShEx formats\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nvalidate a node against a shape label\nThis struct can be used to customize the behavour of ShEx …\nReturns the argument unchanged.\nObtain a <code>ValidatorConfig</code> from a path file in TOML format\nCalls <code>U::from(self)</code>.\nMaximum numbers of validation steps\nConfiguration of RDF data readers\nConfiguration of Shapemaps\nConfiguration of ShEx schemas\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")