searchState.loadedDescShard("oxrdfio", 0, "OxRDF I/O\ncompacted JSON-LD document form\nJSON-LD context document\nexpanded JSON-LD document form\nflattened JSON-LD document form\nJSON-LD frame document\nframed JSON-LD document form\nI/O error during parsing (file not found…).\nJSON-LD\nJSON-Ld profile.\nSet of JSON-Ld profiles.\nA remote document fetched to support parsing.\nN3\nN-Quads\nN-Triples\nRDF serialization formats.\nError returned during RDF format parsing.\nParsers for RDF serialization formats.\nA serializer for RDF serialization formats.\nAn error in the syntax of the parsed file.\nRDF/XML\nParses a RDF file from a <code>Read</code> implementation.\nParses a RDF file from a byte slice.\nstreaming JSON-LD document form\nAn error in the file syntax.\nA position in a text i.e. a <code>line</code> number starting from 0, a …\nTriG\nTurtle\nSerializes quads or triples to a <code>Write</code> implementation.\nThe base IRI considered at the current step of the parsing.\nThe base IRI considered at the current step of the parsing.\nChecks if this profile list contains the given profile.\nContent of the document.\nThe format IANA-registered file extension.\nWrites the last bytes of the file\nParses from a <code>Read</code> implementation and returns an iterator …\nParses from a byte slice and returns an iterator of quads.\nSerializes to a <code>Write</code> implementation.\nThe format the parser uses.\nThe format the serializer serializes to.\nFormat of the document.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLooks for a known format from an extension.\nBuilds a parser for the given format.\nBuilds a serializer for the given format\nLooks for a known profile from an IRI.\nLooks for a known format from a media type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe format canonical IRI according to the Unique URIs for …\nThe profile canonical IRI.\nThe location of the error inside of the file.\nThe format IANA media type.\nThe format name.\nThe list of IRI prefixes considered at the current step of …\nThe list of IRI prefixes considered at the current step of …\nRenames the blank nodes ids from the ones set in the …\nSerializes a <code>QuadRef</code>\nSerializes a <code>TripleRef</code>\nChecks if the formats supports RDF datasets and not only …\nChecks if the formats supports RDF-star quoted triples.\nAssumes the file is valid to make parsing faster.\nFinal URL of the remote document after possible …\nProvides an IRI that could be used to resolve the file …\nIf the format supports it, sets a base IRI.\nProvides the name graph name that should replace the …\nIf the format supports it, sets a prefix.\nSets that the parser must fail if parsing a named graph.")