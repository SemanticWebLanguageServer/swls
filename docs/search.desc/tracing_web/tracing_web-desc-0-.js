searchState.loadedDescShard("tracing_web", 0, "A tracing compatible subscriber layer for web platforms.\nConcrete <code>std::io::Write</code> implementation returned by …\nDetermine what additional information will be attached to …\nAn adaptor for Formatters from …\n<strong>Discouraged</strong> A <code>MakeWriter</code> emitting the written text to the …\nA <code>MakeWriter</code> emitting the written text to the <code>console</code>.\nA <code>Layer</code> that emits span enter, exit and events as …\nCalled when a span is constructed, with its initial …\nFind the details in the extensions of a span that will be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a default console writer, i.e. no level annotation …\nConstruct a new layer recording performance events.\nCalled when a span records some values.\nChange the way additional details are attached to …\nChange the way additional details are attached to …\nEnables an additional label for the log level to be shown.")